git config --list : It will list all the configuration parameters
git config --global user.name <author name> : It will set the author name under whom the versions of git will be created
git config  --global user.email <author email> : It will set the email of the author for the git changes
git diff : It shows the difference between the last commited file and the file in the working area
git diff --staged : It will show the difference between the last commited file and the file in the staging area
git reset <commit> : this command will undo all commits after the specified commit and preserves the changes in local directory
git reset --hard <commit> : this command discards all history and goes back to the specified commit
git restore <filename> : It will help to restore the deleted file from your working area(local directory)
git ls-files: It will list down all the files which are in the local repository
git show : It will show the difference between the latest commit file and the current file
git ls-tree --full-tree --name-only -r HEAD
git log --pretty=oneline
git log --pretty=full
git log --pretty=medium
git log --pretty=short
git log --pretty=fuller
git log --pretty=email

git remote - It will list down all remote repositories
git remote add origin <github url> - It will set the link between remote repository and the local repository
git push origin master - It will update the remote repository with the latest version of the local repository
git pull origin master - It will pull the latest code from the remote repository to the local repository
git clone <github url> - It will create a copy of the remote repository to the local machine

git branch - It will list down all the branches in current git repository
git branch <branchname> - It will create a new branch with the given branchname
git checkout <branchname> - It will change the head pointer to the checkout branch
git merge <branchname> - It will merge the branch with the master branch, if the the eheckout branch is master
git rebase master - It is a way of combining the work between different branches
git branch -d <branchname> - It will delete the branch
git checkout -b <branchname> - It will create a new branch and checkout to the newly created branch
